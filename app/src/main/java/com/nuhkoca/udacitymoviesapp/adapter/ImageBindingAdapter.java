package com.nuhkoca.udacitymoviesapp.adapter;import android.databinding.BindingAdapter;import android.graphics.drawable.Drawable;import android.support.annotation.Nullable;import android.support.v4.content.ContextCompat;import android.support.v7.widget.CardView;import android.text.TextUtils;import android.view.View;import android.widget.ImageView;import android.widget.ProgressBar;import android.widget.TextView;import com.bumptech.glide.load.DataSource;import com.bumptech.glide.load.engine.GlideException;import com.bumptech.glide.request.RequestListener;import com.bumptech.glide.request.target.Target;import com.github.florent37.glidepalette.BitmapPalette;import com.github.florent37.glidepalette.GlidePalette;import com.nuhkoca.udacitymoviesapp.R;import com.nuhkoca.udacitymoviesapp.module.GlideApp;/** * Created by nuhkoca on 2/17/18. */public class ImageBindingAdapter {    private static final String IMAGE_URL_PREFIX = "http://image.tmdb.org/t/p/w500/";    @BindingAdapter(value = {"android:src", "progressBar", "floorV", "titleT"})    public static void loadImagesFromAPI(ImageView imageView, String logoUrl, ProgressBar progressBar, final CardView floor, TextView title) {        logoUrl = IMAGE_URL_PREFIX + logoUrl;        if (!TextUtils.isEmpty(logoUrl)) {            GlideApp.with(imageView.getContext())                    .load(logoUrl)                    .listener(GlidePalette.with(logoUrl)                            .use(GlidePalette.Profile.VIBRANT)                            .intoBackground(floor, GlidePalette.Swatch.RGB)                            .intoBackground(title, GlidePalette.Swatch.RGB)                            .intoTextColor(title, GlidePalette.Swatch.BODY_TEXT_COLOR)                    )                    .listener(requestListener(progressBar))                    .into(imageView);        }    }    private static RequestListener<Drawable> requestListener(final ProgressBar progressBar) {        return new RequestListener<Drawable>() {            @Override            public boolean onLoadFailed(@Nullable GlideException e, Object model, Target<Drawable> target, boolean isFirstResource) {                progressBar.setVisibility(View.GONE);                return false;            }            @Override            public boolean onResourceReady(Drawable resource, Object model, Target<Drawable> target, DataSource dataSource, boolean isFirstResource) {                progressBar.setVisibility(View.GONE);                return false;            }        };    }}